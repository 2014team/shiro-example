/*
 * JSP-Tag generated by Resin Professional 4.0.13 (built Tue, 09 Nov 2010 03:50:16 PST)
 */

package _jsp._web_22dinf._tags;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import org.apache.shiro.util.StringUtils;
import org.apache.shiro.SecurityUtils;

public class _hasallpermissions__tag extends com.caucho.jsp.java.JspTagSupport {
  public static final boolean _caucho_hasCustomTag = false;
  static private final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private static com.caucho.jsp.PageManager _jsp_pageManager;
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;

  private java.lang.String name;
  private boolean _jsp_name_isSet;

  public void setName(java.lang.String value)
  {
    this._jsp_name_isSet = true;
    this.name = value;
  }

  private java.lang.String delimiter;
  private boolean _jsp_delimiter_isSet;

  public void setDelimiter(java.lang.String value)
  {
    this._jsp_delimiter_isSet = true;
    this.delimiter = value;
  }

  public void doTag()
    throws javax.servlet.jsp.JspException, java.io.IOException
  {
    javax.servlet.jsp.JspContext _jsp_parentContext = getJspContext();
    com.caucho.jsp.PageContextWrapper pageContext = _jsp_pageManager.createPageContextWrapper(_jsp_parentContext);
    setJspContext(pageContext);
    com.caucho.jsp.PageContextWrapper jspContext = pageContext;
    javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    try {
      doTag(_jsp_parentContext, pageContext, out, null, this);
    } catch (Throwable e) {
      if (e instanceof java.io.IOException)
        throw (java.io.IOException) e;
      throw com.caucho.jsp.QJspException.createJspException(e);
    }
  }

  public void doTag(javax.servlet.jsp.JspContext _jsp_parentContext,
                           com.caucho.jsp.PageContextWrapper pageContext,
                           javax.servlet.jsp.JspWriter out,
                           javax.servlet.jsp.tagext.JspFragment _jspBody,
                           javax.servlet.jsp.tagext.JspTag jsp_parent_tag)
    throws Throwable
  {
    javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) pageContext.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) pageContext.getResponse();
    javax.servlet.http.HttpSession session = pageContext.getSession();
    javax.servlet.ServletContext application = pageContext.getServletContext();
    javax.servlet.ServletConfig config = pageContext.getServletConfig();
    com.caucho.jsp.PageContextWrapper jspContext = pageContext;
    TagState _jsp_state = new TagState();
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = jsp_parent_tag;
    if (_jsp_name_isSet)
      pageContext.setAttribute("name", name);
    if (_jsp_delimiter_isSet)
      pageContext.setAttribute("delimiter", delimiter);
    out.write(_jsp_string0, 0, _jsp_string0.length);
    

    if(!StringUtils.hasText(delimiter)) {
        delimiter = ",";//\u9ed8\u8ba4\u9017\u53f7\u5206\u9694
    }

    if(!StringUtils.hasText(name)) {

    javax.servlet.jsp.tagext.JspFragment _jsp_frag_0 = getJspBody();
    if (_jsp_frag_0 != null) {
      _jsp_frag_0.invoke(null);
    }
    
        return;
    }

    String[] roles = name.split(delimiter);

    if(!SecurityUtils.getSubject().isPermittedAll(roles)) {
        return;
    } else {

    javax.servlet.jsp.tagext.JspFragment _jsp_frag_1 = getJspBody();
    if (_jsp_frag_1 != null) {
      _jsp_frag_1.invoke(null);
    }
    
    }

  }

  public javax.servlet.jsp.tagext.TagInfo _caucho_getTagInfo(javax.servlet.jsp.tagext.TagLibraryInfo taglib)
    throws com.caucho.config.ConfigException
  {
    com.caucho.jsp.cfg.TldTag tag = new com.caucho.jsp.cfg.TldTag();
    tag.setName("test");
    com.caucho.jsp.cfg.TldAttribute attr;
    attr = new com.caucho.jsp.cfg.TldAttribute();
    attr.setName("name");
    attr.setType(java.lang.String.class);
    attr.setRtexprvalue(true);
    attr.setRequired(true);
    tag.addAttribute(attr);
    attr = new com.caucho.jsp.cfg.TldAttribute();
    attr.setName("delimiter");
    attr.setType(java.lang.String.class);
    attr.setRtexprvalue(true);
    attr.setRequired(false);
    tag.addAttribute(attr);
    com.caucho.jsp.cfg.TldVariable var;
    return new com.caucho.jsp.java.TagInfoExt(tag.getName(),
                       getClass().getName(),
                       "scriptless",
                       "A simple tag",
                       taglib,
                       null,
                       tag.getAttributes(),
                       null,
                       null,
                       null,
                       tag.getVariables(),
                       false,
                       null,
                       _caucho_depends.getDependencies());
  }

  public String _caucho_getDynamicAttributes()
  {
    return null;
  }

  private javax.servlet.jsp.tagext.TagLibraryInfo _caucho_getTagLibrary()
    throws com.caucho.config.ConfigException
  {
    return new com.caucho.jsp.java.TagTaglib("x", "http://test.com");
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 72739197937975180L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("WEB-INF/tags/hasAllPermissions.tag"), -3261538421091502042L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }
  static boolean _jsp_isTagInit;

  public void caucho_init(ServletConfig config)
  {
    if (_jsp_isTagInit)
      return;
    _jsp_isTagInit = true;
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, _caucho_getFunctionMap());
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n\r\n".toCharArray();
  }
}
